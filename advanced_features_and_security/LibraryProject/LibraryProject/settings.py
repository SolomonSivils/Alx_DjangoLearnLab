"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$8l1ii^hvkh1)#42d-h^7+(#(^z0c3tjj=dqt$f4ypu*!6vcop'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['your-domain.com', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
    'csp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators


# AUTH_PASSWORD_VALIDATORS = [
#     {
#       #  'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#      #   'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#     #    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#      #   'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ] 

AUTH_USER_MODEL = 'bookshelf.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# These settings are used by Django's built-in authentication views
# to determine the redirect URLs after login and logout.

# The URL to redirect to after a user logs in.
# This should point to a view that requires authentication.
LOGIN_REDIRECT_URL = '/'

# The URL to redirect to after a user logs out.
# This will usually be the login page.
LOGOUT_REDIRECT_URL = 'login'

# The URL of the login page. This is used by the @login_required decorator.
LOGIN_URL = 'login'

# --- Security Enhancements ---

# Secure the browser's XSS filter
SECURE_BROWSER_XSS_FILTER = True

# Prevent your site from being loaded in a frame
X_FRAME_OPTIONS = 'DENY'

# Prevent browsers from guessing the content type
SECURE_CONTENT_TYPE_NOSNIFF = True

# Ensure cookies are sent over HTTPS only
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Optional but recommended
SECURE_SSL_REDIRECT = True

# HSTS settings
# HSTS tells browsers to only access your site via HTTPS for a given time
# 31536000 seconds is equivalent to one year
SECURE_HSTS_SECONDS = 31536000

# This ensures HSTS is applied to all subdomains as well
SECURE_HSTS_INCLUDE_SUBDOMAINS = True

# This allows browsers to preload your domain into their HSTS list
# This prevents the initial HTTP request even before a redirect
SECURE_HSTS_PRELOAD = True

# This setting tells Django that it's running behind a reverse proxy
# and to trust the X-Forwarded-Proto header for determining if a request is secure (HTTPS)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'self'",)
CSP_FONT_SRC = ("'self'",)
CSP_IMG_SRC = ("'self'",)